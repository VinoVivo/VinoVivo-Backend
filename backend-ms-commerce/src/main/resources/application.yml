## Instance port
server:
  port: ${PORT:8082}

## Configuration for Spring Boot application, security using OAuth2,
## database connection using JDBC and JPA/Hibernate, cache and mail
spring:
  application:
    name: ${APP_NAME:ms-commerce}
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI:https://vinovivo-production.up.railway.app/realms/vino-vivo}
          jwk-set-uri: ${KEYCLOAK_JWK_SET_URI:https://vinovivo-production.up.railway.app/realms/vino-vivo/protocol/openid-connect/certs}
  datasource:
    url: jdbc:mysql://${MYSQL_URL:viaduct.proxy.rlwy.net:34951/Vino_Vivo}
    username: root
    password: ${MYSQL_PASSWORD:wUJscTKkhYfIYnvpnkdObfClPwMGMPjf}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        hbm2ddl.auto: validate
    open-in-view: false
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=50,expireAfterAccess=600s
  mail:
    host: smtppro.zoho.com
    port: 587
    username: ${SMTP_USERNAME:vinovivo.adm@gmail.com}
    password: ${SMTP_PASSWORD:vinovivoGrupo4}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

proyecto:
  mail-on: ${EMAIL_TURNED_ON:false}

## Configuration for Springdoc
## This includes the path for API docs and Swagger UI, enabling Swagger UI
## and specifying the packages to scan for API docs generation
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    enable: true
  packages-to-scan: com.mscommerce.controller

## Configuration for Eureka
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    service-url:
      defaultZone: ${EUREKA_URL:http://localhost:8761/eureka}
  instance:
    preferIpAddress: false
    # For local development. Set to false if you want to use the hostname in a DNS-enabled environment
    hostname: ${HOSTNAME:localhost}

